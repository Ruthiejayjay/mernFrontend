{"ast":null,"code":"import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n};","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch","inputHandler","id"],"sources":["C:/Users/ruthi/source/react/mernFrontend/FrontendApp/src/shared/hooks/form-hook.js"],"sourcesContent":["import { useCallback, useReducer } from 'react'\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n};"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,cAAL;MACI,IAAIC,WAAW,GAAG,IAAlB;;MACA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;QAChC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;UAC5BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;QACH,CAFD,MAEO;UACHH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;QACH;MACJ;;MACD,OAAO,EACH,GAAGN,KADA;QAEHK,MAAM,EAAE,EACJ,GAAGL,KAAK,CAACK,MADL;UAEJ,CAACJ,MAAM,CAACG,OAAR,GAAkB;YAAEG,KAAK,EAAEN,MAAM,CAACM,KAAhB;YAAuBD,OAAO,EAAEL,MAAM,CAACK;UAAvC;QAFd,CAFL;QAMHA,OAAO,EAAEH;MANN,CAAP;;IAQJ;MACI,OAAOH,KAAP;EAnBR;AAqBH,CAtBD;;AAwBA,OAAO,MAAMQ,OAAO,GAAG,CAACC,aAAD,EAAgBC,mBAAhB,KAAwC;EAC3D,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBd,UAAU,CAACC,WAAD,EAAc;IAClDM,MAAM,EAAEI,aAD0C;IAElDH,OAAO,EAAEI;EAFyC,CAAd,CAAxC;EAKA,MAAMG,YAAY,GAAGhB,WAAW,CAAC,CAACiB,EAAD,EAAKP,KAAL,EAAYD,OAAZ,KAAwB;IACrDM,QAAQ,CAAC;MACLV,IAAI,EAAE,cADD;MAELK,KAAK,EAAEA,KAFF;MAGLD,OAAO,EAAEA,OAHJ;MAILF,OAAO,EAAEU;IAJJ,CAAD,CAAR;EAMH,CAP+B,EAO7B,EAP6B,CAAhC;AAQH,CAdM"},"metadata":{},"sourceType":"module"}