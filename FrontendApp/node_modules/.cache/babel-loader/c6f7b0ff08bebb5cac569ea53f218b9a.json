{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthi\\\\source\\\\react\\\\mernFrontend\\\\FrontendApp\\\\src\\\\places\\\\pages\\\\UpdatePlace.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/FormElement/Input';\nimport Button from '../../shared/components/FormElement/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validator';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!loadedPlace && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Could not find place!\")));\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min. 5 characters).\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"UPDATE PLACE\")));\n};\n\nexport default UpdatePlace;","map":{"version":3,"names":["React","useEffect","useState","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","LoadingSpinner","ErrorModal","useForm","Card","useHttpClient","UpdatePlace","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","place","err","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"sources":["C:/Users/ruthi/source/react/mernFrontend/FrontendApp/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validator';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './PlaceForm.css';\r\n\r\n\r\n\r\nconst UpdatePlace = () => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n\r\n\r\n    const placeId = useParams().placeId;\r\n\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            title: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `http://localhost:5000/api/places/${placeId}`\r\n                );\r\n                setLoadedPlace(responseData.place);\r\n                setFormData(\r\n                    {\r\n                        title: {\r\n                            value: responseData.place.title,\r\n                            isValid: true\r\n                        },\r\n                        description: {\r\n                            value: responseData.place.description,\r\n                            isValid: true\r\n                        }\r\n                    },\r\n                    true\r\n                );\r\n\r\n            } catch (err) { }\r\n        };\r\n        fetchPlace()\r\n    }, [sendRequest, placeId, setFormData])\r\n\r\n\r\n\r\n\r\n    const placeUpdateSubmitHandler = event => {\r\n        event.preventDefault();\r\n        console.log(formState.inputs);\r\n    };\r\n\r\n    if (!loadedPlace && !error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>Could not find place!</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ErrorModal error={error} onClear={clearError}/>\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n            <Input\r\n                id=\"title\"\r\n                element=\"input\"\r\n                type=\"text\"\r\n                label=\"Title\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Please enter a valid title.\"\r\n                onInput={inputHandler}\r\n                initialValue={formState.inputs.title.value}\r\n                initialValid={formState.inputs.title.isValid}\r\n            />\r\n            <Input\r\n                id=\"description\"\r\n                element=\"textarea\"\r\n                label=\"Description\"\r\n                validators={[VALIDATOR_MINLENGTH(5)]}\r\n                errorText=\"Please enter a valid description (min. 5 characters).\"\r\n                onInput={inputHandler}\r\n                initialValue={formState.inputs.description.value}\r\n                initialValid={formState.inputs.description.isValid}\r\n            />\r\n            <Button type=\"submit\" disabled={!formState.isValid}>\r\n                UPDATE PLACE\r\n            </Button>\r\n        </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdatePlace;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}