{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthi\\\\source\\\\react\\\\mernFrontend\\\\FrontendApp\\\\src\\\\places\\\\pages\\\\NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElement/Input';\nimport Button from '../../shared/components/FormElement/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validator';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        input: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"ADD PLACE\"));\n};\n\nexport default NewPlace;","map":{"version":3,"names":["React","useCallback","useReducer","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","value","NewPlace","formState","dispatch","title","description","inputHandler","id"],"sources":["C:/Users/ruthi/source/react/mernFrontend/FrontendApp/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useCallback, useReducer } from 'react';\r\n\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport { \r\n  VALIDATOR_REQUIRE, \r\n  VALIDATOR_MINLENGTH \r\n} from '../../shared/util/validator'\r\n\r\nimport './NewPlace.css'\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        input: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst NewPlace = () => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    isValid: false\r\n  })\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE', \r\n      value: value, \r\n      isValid: isValid,\r\n      inputId: id});\r\n   }, []);\r\n\r\n  return <form className='place-form'>\r\n    <Input\r\n      id=\"title\"\r\n      element=\"input\"\r\n      type=\"text\"\r\n      label=\"Title\"\r\n      validators={[VALIDATOR_REQUIRE()]}\r\n      errorText='Please enter a valid title'\r\n      onInput={inputHandler}\r\n    />\r\n    <Input\r\n      id=\"description\"\r\n      element=\"textarea\"\r\n      label=\"Description\"\r\n      validators={[VALIDATOR_MINLENGTH(5)]}\r\n      errorText='Please enter a valid description (at least 5 characters).'\r\n      onInput={inputHandler}\r\n    />\r\n    <Button type=\"submit\" disabled={!formState.isValid}>ADD PLACE</Button>\r\n  </form>\r\n};\r\n\r\nexport default NewPlace;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAOC,KAAP,MAAkB,2CAAlB;AACA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,SACEC,iBADF,EAEEC,mBAFF,QAGO,6BAHP;AAKA,OAAO,gBAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,IAAIC,WAAW,GAAG,IAAlB;;MACA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;QAClC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;UAC9BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;QACD,CAFD,MAEO;UACLH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;QACD;MACF;;MACD,OAAO,EACL,GAAGN,KADE;QAELO,KAAK,EAAE,EACL,GAAGP,KAAK,CAACK,MADJ;UAEL,CAACJ,MAAM,CAACG,OAAR,GAAkB;YAAEI,KAAK,EAAEP,MAAM,CAACO,KAAhB;YAAuBF,OAAO,EAAEL,MAAM,CAACK;UAAvC;QAFb,CAFF;QAMLA,OAAO,EAAEH;MANJ,CAAP;;IAQF;MACE,OAAOH,KAAP;EAnBJ;AAqBD,CAtBD;;AAwBA,MAAMS,QAAQ,GAAG,MAAM;EACrB,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBjB,UAAU,CAACK,WAAD,EAAc;IACpDM,MAAM,EAAE;MACNO,KAAK,EAAE;QACLJ,KAAK,EAAE,EADF;QAELF,OAAO,EAAE;MAFJ,CADD;MAKNO,WAAW,EAAE;QACXL,KAAK,EAAE,EADI;QAEXF,OAAO,EAAE;MAFE;IALP,CAD4C;IAWpDA,OAAO,EAAE;EAX2C,CAAd,CAAxC;EAcA,MAAMQ,YAAY,GAAGrB,WAAW,CAAC,CAACsB,EAAD,EAAKP,KAAL,EAAYF,OAAZ,KAAwB;IACvDK,QAAQ,CAAC;MACPT,IAAI,EAAE,cADC;MAEPM,KAAK,EAAEA,KAFA;MAGPF,OAAO,EAAEA,OAHF;MAIPF,OAAO,EAAEW;IAJF,CAAD,CAAR;EAKA,CAN8B,EAM5B,EAN4B,CAAhC;EAQA,oBAAO;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACL,oBAAC,KAAD;IACE,EAAE,EAAC,OADL;IAEE,OAAO,EAAC,OAFV;IAGE,IAAI,EAAC,MAHP;IAIE,KAAK,EAAC,OAJR;IAKE,UAAU,EAAE,CAAClB,iBAAiB,EAAlB,CALd;IAME,SAAS,EAAC,4BANZ;IAOE,OAAO,EAAEiB,YAPX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADK,eAUL,oBAAC,KAAD;IACE,EAAE,EAAC,aADL;IAEE,OAAO,EAAC,UAFV;IAGE,KAAK,EAAC,aAHR;IAIE,UAAU,EAAE,CAAChB,mBAAmB,CAAC,CAAD,CAApB,CAJd;IAKE,SAAS,EAAC,2DALZ;IAME,OAAO,EAAEgB,YANX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVK,eAkBL,oBAAC,MAAD;IAAQ,IAAI,EAAC,QAAb;IAAsB,QAAQ,EAAE,CAACJ,SAAS,CAACJ,OAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAlBK,CAAP;AAoBD,CA3CD;;AA6CA,eAAeG,QAAf"},"metadata":{},"sourceType":"module"}