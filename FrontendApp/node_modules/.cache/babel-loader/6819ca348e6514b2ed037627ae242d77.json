{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthi\\\\source\\\\react\\\\mernFrontend\\\\FrontendApp\\\\src\\\\shared\\\\components\\\\FormElement\\\\ImageUpload.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previwUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.file.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.OnInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    ref: filePickerRef,\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: \".jpg,.jpeg,.png\",\n    onChange: pickedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `image-upload ${props.center && 'center'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-upload__preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, previwUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: previwUrl,\n    alt: \"Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 34\n    }\n  }), !previwUrl && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 36\n    }\n  }, \"Please pick an image.\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: pickImageHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"PICK IMAGE\")), !isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 26\n    }\n  }, props.errorText));\n};\n\nexport default ImageUpload;","map":{"version":3,"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","previwUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","OnInput","id","pickImageHandler","current","click","display","center","errorText"],"sources":["C:/Users/ruthi/source/react/mernFrontend/FrontendApp/src/shared/components/FormElement/ImageUpload.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\n\r\nimport Button from './Button'\r\nimport './ImageUpload.css'\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previwUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file])\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files && event.target.file.length === 1) {\r\n             pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.OnInput(props.id, pickedFile, fileIsValid)\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className='form-control'>\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type=\"file\"\r\n                accept=\".jpg,.jpeg,.png\"\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                   {previwUrl && <img src={previwUrl} alt='Preview' />}\r\n                   {!previwUrl &&  <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EACzB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;EACA,MAAM,CAACO,SAAD,EAAYC,aAAZ,IAA6BR,QAAQ,EAA3C;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMW,aAAa,GAAGZ,MAAM,EAA5B;EAEAE,SAAS,CAAC,MAAM;IACZ,IAAI,CAACI,IAAL,EAAW;MACP;IACH;;IACD,MAAMO,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;IACAD,UAAU,CAACE,MAAX,GAAoB,MAAM;MACtBN,aAAa,CAACI,UAAU,CAACG,MAAZ,CAAb;IACH,CAFD;;IAGAH,UAAU,CAACI,aAAX,CAAyBX,IAAzB;EACH,CATQ,EASN,CAACA,IAAD,CATM,CAAT;;EAWA,MAAMY,aAAa,GAAGC,KAAK,IAAI;IAC3B,IAAIC,UAAJ;IACA,IAAIC,WAAW,GAAGX,OAAlB;;IACA,IAAIS,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsBJ,KAAK,CAACG,MAAN,CAAahB,IAAb,CAAkBkB,MAAlB,KAA6B,CAAvD,EAA0D;MACrDJ,UAAU,GAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;MACDhB,OAAO,CAACa,UAAD,CAAP;MACAT,UAAU,CAAC,IAAD,CAAV;MACAU,WAAW,GAAG,IAAd;IACH,CALD,MAKO;MACHV,UAAU,CAAC,KAAD,CAAV;MACAU,WAAW,GAAG,KAAd;IACH;;IACDhB,KAAK,CAACoB,OAAN,CAAcpB,KAAK,CAACqB,EAApB,EAAwBN,UAAxB,EAAoCC,WAApC;EACH,CAbD;;EAeA,MAAMM,gBAAgB,GAAG,MAAM;IAC3Bf,aAAa,CAACgB,OAAd,CAAsBC,KAAtB;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IACI,EAAE,EAAExB,KAAK,CAACqB,EADd;IAEI,GAAG,EAAEd,aAFT;IAGI,KAAK,EAAE;MAAEkB,OAAO,EAAE;IAAX,CAHX;IAII,IAAI,EAAC,MAJT;IAKI,MAAM,EAAC,iBALX;IAMI,QAAQ,EAAEZ,aANd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eASI;IAAK,SAAS,EAAG,gBAAeb,KAAK,CAAC0B,MAAN,IAAgB,QAAS,EAAzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,uBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACIvB,SAAS,iBAAI;IAAK,GAAG,EAAEA,SAAV;IAAqB,GAAG,EAAC,SAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADjB,EAEI,CAACA,SAAD,iBAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2BAFnB,CADJ,eAKI,oBAAC,MAAD;IAAQ,IAAI,EAAC,QAAb;IAAsB,OAAO,EAAEmB,gBAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBALJ,CATJ,EAgBK,CAACjB,OAAD,iBAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIL,KAAK,CAAC2B,SAAV,CAhBjB,CADJ;AAoBH,CAzDD;;AA2DA,eAAe5B,WAAf"},"metadata":{},"sourceType":"module"}