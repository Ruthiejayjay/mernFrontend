{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthi\\\\source\\\\react\\\\mernFrontend\\\\FrontendApp\\\\src\\\\user\\\\pages\\\\Auth.js\";\nimport React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElement/Input';\nimport Button from '../../shared/components/FormElement/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElement/ImageUpload';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validator';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest('http://localhost:5000/api/users/signup', 'POST', formData);\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }), !isLoginMode && /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","useHttpClient","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","responseData","JSON","stringify","login","user","id","err","formData","FormData","append"],"sources":["C:/Users/ruthi/source/react/mernFrontend/FrontendApp/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElement/ImageUpload';\r\nimport {\r\n    VALIDATOR_EMAIL,\r\n    VALIDATOR_MINLENGTH,\r\n    VALIDATOR_REQUIRE\r\n} from '../../shared/util/validator';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined,\r\n                    image: undefined,\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        } else {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false\r\n                    },\r\n                    image: {\r\n                        value: null,\r\n                        isValid: false\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    };\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    'http://localhost:5000/api/users/login',\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n\r\n                auth.login(responseData.user.id);\r\n            } catch (err) { }\r\n\r\n        } else {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('email', formState.inputs.email.value);\r\n                formData.append('name', formState.inputs.name.value);\r\n                formData.append('password', formState.inputs.password.value);\r\n                formData.append('image', formState.inputs.image.value);\r\n                const responseData = await sendRequest('http://localhost:5000/api/users/signup',\r\n                    'POST',\r\n                    formData\r\n                );\r\n\r\n                auth.login(responseData.user.id);\r\n            } catch (err) { }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Login Required</h2>\r\n                <hr />\r\n                <form onSubmit={authSubmitHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Your Name\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter a name.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} />}\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-Mail\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email address.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorText=\"Please enter a valid password, at least 6 characters.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                    </Button>\r\n                </form>\r\n                <Button inverse onClick={switchModeHandler}>\r\n                    SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n                </Button>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}