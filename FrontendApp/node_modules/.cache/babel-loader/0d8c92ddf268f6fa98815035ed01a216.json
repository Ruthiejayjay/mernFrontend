{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthi\\\\source\\\\react\\\\mernFrontend\\\\FrontendApp\\\\src\\\\user\\\\pages\\\\Auth.js\";\nimport React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElement/Input';\nimport Button from '../../shared/components/FormElement/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validator';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  });\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {} else {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        console.log(responseData);\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        console.log(err);\n        setIsLoading(false);\n        setError(err.message || 'something went wrong, please try again');\n      }\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","ErrorModal","LoadingSpinner","Auth","auth","isLoginMode","setIsLoginMode","isLoading","setIsLoading","error","setError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","console","log","login","err"],"sources":["C:/Users/ruthi/source/react/mernFrontend/FrontendApp/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\r\n\r\nimport Card from '../../shared/components/UIElements/Card'\r\nimport Input from '../../shared/components/FormElement/Input'\r\nimport Button from '../../shared/components/FormElement/Button'\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validator'\r\nimport { useForm } from '../../shared/hooks/form-hook'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport './Auth.css'\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n\r\n    })\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: undefined\r\n            }, formState.inputs.email.isValid && formState.inputs.password.isValid)\r\n        } else {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                }\r\n            },\r\n                false\r\n            );\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    }\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        if (isLoginMode) {\r\n\r\n        } else {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await fetch('http://localhost:5000/api/users/signup', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: formState.inputs.name.value,\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    })\r\n                });\r\n\r\n               const responseData = await response.json();\r\n               if (!response.ok) {\r\n                throw new Error(responseData.message)\r\n               }\r\n               console.log(responseData);\r\n               setIsLoading(false);\r\n               auth.login();\r\n               \r\n            } catch (err) {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setError(err.message || 'something went wrong, please try again')\r\n            }\r\n        }\r\n        setIsLoading(false)\r\n\r\n\r\n    };\r\n    return (\r\n        <>\r\n        <ErrorModal error={error} />\r\n        <Card className=\"authentication\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <h2>Login Required</h2>\r\n            <hr />\r\n            <form onSubmit={authSubmitHandler}>\r\n                {!isLoginMode && (\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        label=\"Name\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter a name.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                )}\r\n                <Input\r\n                    element=\"input\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    label=\"E-Mail\"\r\n                    validators={[VALIDATOR_EMAIL()]}\r\n                    errorText=\"Please enter a valid email address.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    element=\"input\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    validators={[VALIDATOR_MINLENGTH(6)]}\r\n                    errorText=\"Please enter a valid password.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Button type=\"submit\" disabled={!formState.isValid}>\r\n                    {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                </Button>\r\n            </form>\r\n            <Button inverse onClick={switchModeHandler}>SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}</Button>\r\n        </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}