{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useState","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["C:/Users/ruthi/source/react/mernFrontend/FrontendApp/src/shared/hooks/auth-hook.js"],"sourcesContent":["import {useCallback, useEffect, useState} from 'react'\r\n\r\nlet logoutTimer;\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate =\r\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem(\r\n            'userData',\r\n            JSON.stringify({\r\n                userId: uid,\r\n                token: token,\r\n                expiration: tokenExpirationDate.toISOString()\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (\r\n            storedData &&\r\n            storedData.token &&\r\n            new Date(storedData.expiration) > new Date()\r\n        ) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId };\r\n}"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AAEA,IAAIC,WAAJ;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;EACzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDN,QAAQ,EAA9D;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;EAEA,MAAMS,KAAK,GAAGX,WAAW,CAAC,CAACY,GAAD,EAAMP,KAAN,EAAaQ,cAAb,KAAgC;IACtDP,QAAQ,CAACD,KAAD,CAAR;IACAK,SAAS,CAACE,GAAD,CAAT;IACA,MAAML,mBAAmB,GACrBM,cAAc,IAAI,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAA5C,CADtB;IAEAP,sBAAsB,CAACD,mBAAD,CAAtB;IACAS,YAAY,CAACC,OAAb,CACI,UADJ,EAEIC,IAAI,CAACC,SAAL,CAAe;MACXV,MAAM,EAAEG,GADG;MAEXP,KAAK,EAAEA,KAFI;MAGXe,UAAU,EAAEb,mBAAmB,CAACc,WAApB;IAHD,CAAf,CAFJ;EAQH,CAdwB,EActB,EAdsB,CAAzB;EAgBA,MAAMC,MAAM,GAAGtB,WAAW,CAAC,MAAM;IAC7BM,QAAQ,CAAC,IAAD,CAAR;IACAE,sBAAsB,CAAC,IAAD,CAAtB;IACAE,SAAS,CAAC,IAAD,CAAT;IACAM,YAAY,CAACO,UAAb,CAAwB,UAAxB;EACH,CALyB,EAKvB,EALuB,CAA1B;EAOAtB,SAAS,CAAC,MAAM;IACZ,IAAII,KAAK,IAAIE,mBAAb,EAAkC;MAC9B,MAAMiB,aAAa,GAAGjB,mBAAmB,CAACQ,OAApB,KAAgC,IAAID,IAAJ,GAAWC,OAAX,EAAtD;MACAZ,WAAW,GAAGsB,UAAU,CAACH,MAAD,EAASE,aAAT,CAAxB;IACH,CAHD,MAGO;MACHE,YAAY,CAACvB,WAAD,CAAZ;IACH;EACJ,CAPQ,EAON,CAACE,KAAD,EAAQiB,MAAR,EAAgBf,mBAAhB,CAPM,CAAT;EASAN,SAAS,CAAC,MAAM;IACZ,MAAM0B,UAAU,GAAGT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,UAArB,CAAX,CAAnB;;IACA,IACIF,UAAU,IACVA,UAAU,CAACtB,KADX,IAEA,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,IAAkC,IAAIN,IAAJ,EAHtC,EAIE;MACEH,KAAK,CAACgB,UAAU,CAAClB,MAAZ,EAAoBkB,UAAU,CAACtB,KAA/B,EAAsC,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,CAAtC,CAAL;IACH;EACJ,CATQ,EASN,CAACT,KAAD,CATM,CAAT;EAWA,OAAO;IAAEN,KAAF;IAASM,KAAT;IAAgBW,MAAhB;IAAwBb;EAAxB,CAAP;AACH,CAjDM"},"metadata":{},"sourceType":"module"}